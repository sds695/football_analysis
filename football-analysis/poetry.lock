[[package]]
name = "antlr4-python3-runtime"
version = "4.9.3"
description = "ANTLR 4.9.3 runtime for Python 3.7"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "anyconfig"
version = "0.13.0"
description = "Library provides common APIs to load and dump configuration files in various formats"
category = "main"
optional = false
python-versions = "*"

[package.extras]
query = ["jmespath"]
schema = ["jsonschema"]
template = ["jinja2"]
toml = ["toml"]
yaml = ["pyyaml"]

[[package]]
name = "arrow"
version = "1.3.0"
description = "Better dates & times for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = ">=2.7.0"
types-python-dateutil = ">=2.8.10"

[package.extras]
doc = ["doc8", "sphinx (>=7.0.0)", "sphinx-autobuild", "sphinx-autodoc-typehints", "sphinx_rtd_theme (>=1.3.0)"]
test = ["dateparser (>=1.0.0,<2.0.0)", "pre-commit", "pytest", "pytest-cov", "pytest-mock", "pytz (==2021.1)", "simplejson (>=3.0.0,<4.0.0)"]

[[package]]
name = "attrs"
version = "23.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
cov = ["attrs", "coverage[toml] (>=5.3)"]
dev = ["attrs", "pre-commit"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
tests = ["attrs", "zope-interface"]
tests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]

[[package]]
name = "binaryornot"
version = "0.4.4"
description = "Ultra-lightweight pure Python package to check if a file is binary or text."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
chardet = ">=3.0.2"

[[package]]
name = "build"
version = "1.0.3"
description = "A simple, correct Python build frontend"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
colorama = {version = "*", markers = "os_name == \"nt\""}
importlib-metadata = {version = ">=4.6", markers = "python_version < \"3.10\""}
packaging = ">=19.0"
pyproject_hooks = "*"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}

[package.extras]
docs = ["furo (>=2023.08.17)", "sphinx (>=7.0,<8.0)", "sphinx-argparse-cli (>=1.5)", "sphinx-autodoc-typehints (>=1.10)", "sphinx-issues (>=3.0.0)"]
test = ["filelock (>=3)", "pytest (>=6.2.4)", "pytest-cov (>=2.12)", "pytest-mock (>=2)", "pytest-rerunfailures (>=9.1)", "pytest-xdist (>=1.34)", "wheel (>=0.36.0)", "setuptools (>=42.0.0)", "setuptools (>=56.0.0)", "setuptools (>=56.0.0)", "setuptools (>=67.8.0)"]
typing = ["importlib-metadata (>=5.1)", "mypy (>=1.5.0,<1.6.0)", "tomli", "typing-extensions (>=3.7.4.3)"]
virtualenv = ["virtualenv (>=20.0.35)"]

[[package]]
name = "cachetools"
version = "5.3.1"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "certifi"
version = "2023.7.22"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "chardet"
version = "5.2.0"
description = "Universal encoding detector for Python 3"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "charset-normalizer"
version = "3.3.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "cookiecutter"
version = "2.4.0"
description = "A command-line utility that creates projects from project templates, e.g. creating a Python package project from a Python package project template."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
arrow = "*"
binaryornot = ">=0.4.4"
click = ">=7.0,<9.0.0"
Jinja2 = ">=2.7,<4.0.0"
python-slugify = ">=4.0.0"
pyyaml = ">=5.3.1"
requests = ">=2.23.0"
rich = "*"

[[package]]
name = "dynaconf"
version = "3.2.3"
description = "The dynamic configurator for your Python Project"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
all = ["redis", "ruamel.yaml", "configobj", "hvac"]
configobj = ["configobj"]
ini = ["configobj"]
redis = ["redis"]
test = ["pytest", "pytest-cov", "pytest-xdist", "pytest-mock", "flake8", "pep8-naming", "flake8-debugger", "flake8-print", "flake8-todo", "radon", "flask (>=0.12)", "django", "python-dotenv", "toml", "redis", "hvac", "configobj"]
toml = ["toml"]
vault = ["hvac"]
yaml = ["ruamel.yaml"]

[[package]]
name = "fsspec"
version = "2023.9.2"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
devel = ["pytest", "pytest-cov"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["requests", "aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "gitdb"
version = "4.0.10"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.37"
description = "GitPython is a Python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[package.extras]
test = ["black", "coverage", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "6.8.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "6.1.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "zipp (>=3.17)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kedro"
version = "0.18.13"
description = "Kedro helps you build production-ready data and analytics pipelines"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyconfig = ">=0.10,<0.14"
attrs = ">=21.3"
build = "*"
cachetools = ">=5.3,<6.0"
click = "<9.0"
cookiecutter = ">=2.1.1,<3.0"
dynaconf = ">=3.1.2,<4.0"
fsspec = ">=2021.4,<2024.1"
gitpython = ">=3.0,<4.0"
importlib-metadata = {version = ">=3.6", markers = "python_version >= \"3.8\""}
importlib-resources = ">=1.3"
jmespath = ">=0.9.5,<2.0"
more-itertools = ">=9,<11"
omegaconf = ">=2.3,<3.0"
parse = ">=1.19.0,<1.20.0"
pip-tools = ">=6.5,<8"
pluggy = ">=1.0,<1.3"
PyYAML = ">=4.2,<7.0"
rich = ">=12.0,<14.0"
rope = ">=0.21,<2.0"
toml = ">=0.10,<1.0"
toposort = ">=1.5,<2.0"

[package.extras]
all = ["Jinja2 (<3.1.0)", "Pillow (>=9.0,<10.0)", "PyYAML (>=4.2,<7.0)", "SQLAlchemy (>=1.2,<2.0)", "biopython (>=1.73,<2.0)", "compress-pickle[lz4] (>=2.1.0,<2.2.0)", "dask[complete] (>=2021.10,<2022.0)", "delta-spark (>=1.0,<3.0)", "docutils (==0.16)", "geopandas (>=0.6.0,<1.0)", "hdfs (>=2.5.8,<3.0)", "holoviews (>=1.13.0)", "ipykernel (>=5.3,<7.0)", "kedro-datasets[all] (>=1.6.0,<1.7.0)", "lxml (>=4.6,<5.0)", "matplotlib (>=3.0.3,<4.0)", "myst-parser (>=1.0.0,<1.1.0)", "networkx (>=2.4,<3.0)", "opencv-python (>=4.5.5.64,<4.6.0.0)", "openpyxl (>=3.0.6,<4.0)", "pandas-gbq (>=0.12.0,<0.18.0)", "pandas (>=1.3,<2.0)", "plotly (>=4.8.0,<6.0)", "pyarrow (>=1.0,<7.0)", "pyproj (>=3.0,<4.0)", "pyspark (>=2.2,<3.4)", "redis (>=4.1,<5.0)", "requests (>=2.20,<3.0)", "s3fs (>=0.3.0,<0.5)", "scikit-learn (>=1.0.2,<1.1.0)", "scipy (>=1.7.3,<1.8.0)", "sphinx-autodoc-typehints (==1.20.2)", "sphinx-notfound-page", "sphinx-copybutton (==0.3.1)", "sphinx-rtd-theme (==1.2.0)", "sphinxcontrib-mermaid (>=0.7.1,<0.8.0)", "sphinx (>=5.3.0,<5.4.0)", "triad (>=0.6.7,<1.0)", "tensorflow (>=2.0,<3.0)", "tables (>=3.6,<4.0)", "tensorflow-macos (>=2.0,<3.0)", "tables (>=3.6.0,<3.7.0)"]
api = ["requests (>=2.20,<3.0)"]
"api.apidataset" = ["requests (>=2.20,<3.0)"]
biosequence = ["biopython (>=1.73,<2.0)"]
"biosequence.biosequencedataset" = ["biopython (>=1.73,<2.0)"]
dask = ["dask[complete] (>=2021.10,<2022.0)", "triad (>=0.6.7,<1.0)"]
"dask.parquetdataset" = ["dask[complete] (>=2021.10,<2022.0)", "triad (>=0.6.7,<1.0)"]
docs = ["docutils (==0.16)", "sphinx (>=5.3.0,<5.4.0)", "sphinx-rtd-theme (==1.2.0)", "sphinx-autodoc-typehints (==1.20.2)", "sphinx-copybutton (==0.3.1)", "sphinx-notfound-page", "ipykernel (>=5.3,<7.0)", "sphinxcontrib-mermaid (>=0.7.1,<0.8.0)", "myst-parser (>=1.0.0,<1.1.0)", "Jinja2 (<3.1.0)", "kedro-datasets[all] (>=1.6.0,<1.7.0)"]
geopandas = ["geopandas (>=0.6.0,<1.0)", "pyproj (>=3.0,<4.0)"]
"geopandas.geojsondataset" = ["geopandas (>=0.6.0,<1.0)", "pyproj (>=3.0,<4.0)"]
holoviews = ["holoviews (>=1.13.0)"]
"holoviews.holoviewswriter" = ["holoviews (>=1.13.0)"]
matplotlib = ["matplotlib (>=3.0.3,<4.0)"]
"matplotlib.matplotlibwriter" = ["matplotlib (>=3.0.3,<4.0)"]
networkx = ["networkx (>=2.4,<3.0)"]
"networkx.networkxdataset" = ["networkx (>=2.4,<3.0)"]
pandas = ["SQLAlchemy (>=1.2,<2.0)", "lxml (>=4.6,<5.0)", "openpyxl (>=3.0.6,<4.0)", "pandas-gbq (>=0.12.0,<0.18.0)", "pandas (>=1.3,<2.0)", "pyarrow (>=1.0,<7.0)", "tables (>=3.6,<4.0)", "tables (>=3.6.0,<3.7.0)"]
"pandas.csvdataset" = ["pandas (>=1.3,<2.0)"]
"pandas.exceldataset" = ["pandas (>=1.3,<2.0)", "openpyxl (>=3.0.6,<4.0)"]
"pandas.featherdataset" = ["pandas (>=1.3,<2.0)"]
"pandas.gbqquerydataset" = ["pandas (>=1.3,<2.0)", "pandas-gbq (>=0.12.0,<0.18.0)"]
"pandas.gbqtabledataset" = ["pandas (>=1.3,<2.0)", "pandas-gbq (>=0.12.0,<0.18.0)"]
"pandas.genericdataset" = ["pandas (>=1.3,<2.0)"]
"pandas.hdfdataset" = ["pandas (>=1.3,<2.0)", "tables (>=3.6,<4.0)", "tables (>=3.6.0,<3.7.0)"]
"pandas.jsondataset" = ["pandas (>=1.3,<2.0)"]
"pandas.parquetdataset" = ["pandas (>=1.3,<2.0)", "pyarrow (>=1.0,<7.0)"]
"pandas.sqlquerydataset" = ["pandas (>=1.3,<2.0)", "SQLAlchemy (>=1.2,<2.0)"]
"pandas.sqltabledataset" = ["pandas (>=1.3,<2.0)", "SQLAlchemy (>=1.2,<2.0)"]
"pandas.xmldataset" = ["pandas (>=1.3,<2.0)", "lxml (>=4.6,<5.0)"]
pickle = ["compress-pickle[lz4] (>=2.1.0,<2.2.0)"]
"pickle.pickledataset" = ["compress-pickle[lz4] (>=2.1.0,<2.2.0)"]
pillow = ["Pillow (>=9.0,<10.0)"]
"pillow.imagedataset" = ["Pillow (>=9.0,<10.0)"]
plotly = ["pandas (>=1.3,<2.0)", "plotly (>=4.8.0,<6.0)"]
"plotly.jsondataset" = ["plotly (>=4.8.0,<6.0)"]
"plotly.plotlydataset" = ["pandas (>=1.3,<2.0)", "plotly (>=4.8.0,<6.0)"]
redis = ["redis (>=4.1,<5.0)"]
spark = ["delta-spark (>=1.0,<3.0)", "hdfs (>=2.5.8,<3.0)", "pyspark (>=2.2,<3.4)", "s3fs (>=0.3.0,<0.5)"]
"spark.deltatabledataset" = ["pyspark (>=2.2,<3.4)", "hdfs (>=2.5.8,<3.0)", "s3fs (>=0.3.0,<0.5)", "delta-spark (>=1.0,<3.0)"]
"spark.sparkdataset" = ["pyspark (>=2.2,<3.4)", "hdfs (>=2.5.8,<3.0)", "s3fs (>=0.3.0,<0.5)"]
"spark.sparkhivedataset" = ["pyspark (>=2.2,<3.4)", "hdfs (>=2.5.8,<3.0)", "s3fs (>=0.3.0,<0.5)"]
"spark.sparkjdbcdataset" = ["pyspark (>=2.2,<3.4)", "hdfs (>=2.5.8,<3.0)", "s3fs (>=0.3.0,<0.5)"]
svmlight = ["scikit-learn (>=1.0.2,<1.1.0)", "scipy (>=1.7.3,<1.8.0)"]
"svmlight.svmlightdataset" = ["scikit-learn (>=1.0.2,<1.1.0)", "scipy (>=1.7.3,<1.8.0)"]
"tensorflow.tensorflowmodeldataset" = ["tensorflow (>=2.0,<3.0)", "tensorflow-macos (>=2.0,<3.0)"]
tensorflow = ["tensorflow (>=2.0,<3.0)", "tensorflow-macos (>=2.0,<3.0)"]
test = ["bandit (>=1.6.2,<2.0)", "behave (==1.2.6)", "biopython (>=1.73,<2.0)", "blacken-docs (==1.9.2)", "black (>=22.0,<23.0)", "compress-pickle[lz4] (>=2.1.0,<2.2.0)", "coverage", "dask[complete] (>=2021.10,<2022.0)", "dill (>=0.3.1,<0.4.0)", "filelock (>=3.4.0,<4.0)", "geopandas (>=0.6.0,<1.0)", "hdfs (>=2.5.8,<3.0)", "holoviews (>=1.13.0)", "import-linter[toml] (==1.8.0)", "isort (>=5.0,<6.0)", "Jinja2 (<3.1.0)", "joblib (>=0.14)", "jupyterlab-server (>=2.11.1,<2.16.0)", "jupyterlab (>=3.0,<3.6.0)", "jupyter (>=1.0,<2.0)", "lxml (>=4.6,<5.0)", "memory-profiler (>=0.50.0,<1.0)", "networkx (>=2.4,<3.0)", "opencv-python (>=4.5.5.64,<4.6.0.0)", "openpyxl (>=3.0.3,<4.0)", "pandas (>=1.3,<2.0)", "Pillow (>=9.0,<10.0)", "plotly (>=4.8.0,<6.0)", "pre-commit (>=2.9.2,<3.0)", "pylint (>=2.17.0,<3.0)", "pyproj (>=3.0,<4.0)", "pytest-cov (>=3.0,<4.0)", "pytest-mock (>=1.7.1,<2.0)", "pytest-xdist[psutil] (>=2.2.1,<2.3.0)", "pytest (>=7.2,<8.0)", "redis (>=4.1,<5.0)", "requests-mock (>=1.6,<2.0)", "requests (>=2.20,<3.0)", "s3fs (>=0.3.0,<0.5)", "scikit-learn (>=1.0.2,<2)", "scipy (>=1.7.3)", "semver", "SQLAlchemy (>=1.2,<2.0)", "triad (>=0.6.7,<1.0)", "trufflehog (>=2.1,<3.0)", "xlsxwriter (>=1.0,<2.0)", "tensorflow (>=2.0,<3.0)", "tables (>=3.6,<4.0)", "tensorflow-macos (>=2.0,<3.0)", "tables (>=3.6.0,<3.7.0)", "tables (>=3.8.0,<3.9.0)", "matplotlib (>=3.0.3,<3.4)", "moto (==1.3.7)", "delta-spark (>=1.2.1,<1.3.0)", "pandas-gbq (>=0.12.0,<0.18.0)", "pyarrow (>=1.0)", "pyspark (>=2.2,<3.4)", "ipython (>=7.31.1,<8.0)", "adlfs (>=2021.7.1,<=2022.2)", "gcsfs (>=2021.4,<=2023.1)", "matplotlib (>=3.5,<3.6)", "moto (==4.1.12)", "delta-spark (>=1.2.1)", "pandas-gbq (>=0.18.0)", "pyarrow (>=7.0)", "pyspark (>=3.4)", "adlfs (>=2023.1,<2024.0)", "gcsfs (>=2023.1,<2023.3)", "ipython (>=8.10,<9.0)"]
video = ["opencv-python (>=4.5.5.64,<4.6.0.0)"]
"video.videodataset" = ["opencv-python (>=4.5.5.64,<4.6.0.0)"]
yaml = ["PyYAML (>=4.2,<7.0)", "pandas (>=1.3,<2.0)"]
"yaml.yamldataset" = ["pandas (>=1.3,<2.0)", "PyYAML (>=4.2,<7.0)"]

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "2.1.3"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "more-itertools"
version = "10.1.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "omegaconf"
version = "2.3.0"
description = "A flexible configuration library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
antlr4-python3-runtime = ">=4.9.0,<4.10.0"
PyYAML = ">=5.1.0"

[[package]]
name = "packaging"
version = "23.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "parse"
version = "1.19.1"
description = "parse() is the opposite of format()"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pip-tools"
version = "7.3.0"
description = "pip-tools keeps your pinned dependencies fresh."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
build = "*"
click = ">=8"
tomli = {version = "*", markers = "python_version < \"3.11\""}

[package.extras]
coverage = ["covdefaults", "pytest-cov"]
testing = ["pytest (>=7.2.0)", "pytest-rerunfailures", "pytest-xdist", "tomli-w", "flit-core (>=2,<4)", "poetry-core (>=1.0.0)"]

[[package]]
name = "platformdirs"
version = "3.11.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.1)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest (>=7.4)"]

[[package]]
name = "pluggy"
version = "1.2.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pygments"
version = "2.16.1"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
plugins = ["importlib-metadata"]

[[package]]
name = "pyproject-hooks"
version = "1.0.0"
description = "Wrappers to call pyproject.toml-based build backend hooks."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-slugify"
version = "8.0.1"
description = "A Python slugify application that also handles Unicode"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
text-unidecode = ">=1.3"

[package.extras]
unidecode = ["Unidecode (>=1.1.1)"]

[[package]]
name = "pytoolconfig"
version = "1.2.5"
description = "Python tool configuration"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=22.0"
platformdirs = {version = ">=1.4.4", optional = true, markers = "extra == \"global\""}
tomli = {version = ">=2.0.1", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["tabulate (>=0.8.9)", "sphinx (>=4.5.0)"]
gendocs = ["sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)", "pytoolconfig"]
global = ["platformdirs (>=1.4.4)"]
validation = ["pydantic (>=1.7.4)"]

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rich"
version = "13.6.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rope"
version = "1.10.0"
description = "a python refactoring library..."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pytoolconfig = {version = ">=1.2.2", extras = ["global"]}

[package.extras]
dev = ["pytest (>=7.0.1)", "pytest-timeout (>=2.1.0)", "build (>=0.7.0)", "pre-commit (>=2.20.0)"]
doc = ["pytoolconfig", "sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)"]
release = ["toml (>=0.10.2)", "twine (>=4.0.2)", "pip-tools (>=6.12.1)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.1"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "toposort"
version = "1.10"
description = "Implements a topological sort algorithm."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "types-python-dateutil"
version = "2.8.19.14"
description = "Typing stubs for python-dateutil"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "urllib3"
version = "2.0.6"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
secure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "zipp"
version = "3.17.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[metadata]
lock-version = "1.1"
python-versions = "^3.9"
content-hash = "d9e5b8a1ea7d7d6aa1f61b0f68cefd6cb3944998269f5e1300fcd8bd44387d4a"

[metadata.files]
antlr4-python3-runtime = []
anyconfig = []
arrow = []
attrs = []
binaryornot = []
build = []
cachetools = []
certifi = []
chardet = []
charset-normalizer = []
click = []
colorama = []
cookiecutter = []
dynaconf = []
fsspec = []
gitdb = []
gitpython = []
idna = []
importlib-metadata = []
importlib-resources = []
jinja2 = []
jmespath = []
kedro = []
markdown-it-py = []
markupsafe = []
mdurl = []
more-itertools = []
omegaconf = []
packaging = []
parse = []
pip-tools = []
platformdirs = []
pluggy = []
pygments = []
pyproject-hooks = []
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
python-slugify = []
pytoolconfig = []
pyyaml = []
requests = []
rich = []
rope = []
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
smmap = []
text-unidecode = []
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
tomli = [
    {file = "tomli-2.0.1-py3-none-any.whl", hash = "sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc"},
    {file = "tomli-2.0.1.tar.gz", hash = "sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f"},
]
toposort = []
types-python-dateutil = []
urllib3 = []
zipp = []
